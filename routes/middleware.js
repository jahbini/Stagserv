// Generated by CoffeeScript 1.12.7
(function() {
  var _, exports, fs, keystone, path;

  _ = require('underscore');

  keystone = require('keystone');

  path = require('path');

  fs = require('fs');


  /*
      Initialises the standard view locals.
      Include anything that should be initialised before route controllers are executed.
  
          if window? then exports= window.exports
          if module?.exports? then exports = module.exports
   */

  if (typeof window !== "undefined" && window !== null) {
    exports = window.exports;
  }

  if ((typeof module !== "undefined" && module !== null ? module.exports : void 0) != null) {
    exports = module.exports;
  }

  exports.initLocals = function(req, res, next) {
    var dir, e, fullpath, locals, ref;
    locals = res.locals;
    locals.user = req.user;
    if ((ref = req.body) != null ? ref.path : void 0) {
      try {
        fullpath = process.cwd() + '/sessions/' + req.body.path;
        dir = path.dirname(fullpath);
        fs.mkdirSync(dir, {
          recursive: true
        }, function() {});
        fs.writeFile(fullpath, JSON.stringify(req.body), function() {});
      } catch (error) {
        e = error;
        console.log(e);
      }
    }
    next();
  };


  /*
  Inits the error handler functions into `req`
   */

  exports.initErrorHandlers = function(req, res, next) {
    res.err = function(err, title, message) {
      res.status(500).render('errors/500', {
        err: err,
        errorTitle: title,
        errorMsg: message
      });
    };
    res.notfound = function(title, message) {
      res.status(404).render('errors/404', {
        errorTitle: title,
        errorMsg: message
      });
    };
    next();
  };


  /*
  Fetches and clears the flashMessages before a view is rendered
   */

  exports.flashMessages = function(req, res, next) {
    var flashMessages;
    flashMessages = {
      info: req.flash('info'),
      success: req.flash('success'),
      warning: req.flash('warning'),
      error: req.flash('error')
    };
    res.locals.messages = _.any(flashMessages, (function(msgs) {
      return msgs.length;
    })) ? flashMessages : false;
    next();
  };

}).call(this);
